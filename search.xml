<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[初识OpenLayers 5]]></title>
    <url>%2Fpost%2Fol%2Fch01%2Findex%2F</url>
    <content type="text"><![CDATA[OpenLayers 5简称ol5，它是一个开源的Web GIS引擎，使用了JavaScript、HTML5及CSS等技术，支持dom，canvas和webgl三种渲染方式。除了支持PC端，还支持移动端。在地图数据源方面，支持各种类型的瓦片地图，既支持在线，也支持离线。比如OSM, Bing, MapBox, Stamen, MapQuest等等；还支持各种矢量地图，比如GeoJSON，TopoJSON，KML，GML等等。随着OpenLayers 5的进一步发展，相信将支持更多的地图类型。 认识WebGisWebGIS（网络地理信息系统）是指工作在Web网上的GIS,是传统的GIS在网络上的延伸和发展，具有传统GIS的特点，可以实现空间数据的检索、查询、制图输出、编辑等GIS基本功能，同时也是Internet 上地理信息发布、共享和交流协作的基础。 百度百科：https://baike.baidu.com/item/webgis/761986 维基百科：https://zh.wikipedia.org/wiki/地理信息系统 兼容性由于OpenLayers 5使用了HTML5技术，所以对各种浏览器的版本有所要求。IE浏览器最低也需要IE9才行，以下的IE浏览器可以考虑使用OpenLayers 2。其他浏览器的最低版本要求为Firefox 3.5，Chrome 3.0，Safari 3.0，Opera 10.5。如果要使用webgl渲染方式，则又需要参考各大浏览器的支持程度进行选择。 代码规范OpenLayers 5采用面向对象的编程范式，类在API中随处可见，比如ol.Map，ol.View等等。如果你有面向对象的思维，将较为容易的理解API及使用。OpenLayers 5采用包管理的方式管理代码，比如layer的包名为ol.layer，命名方式类似于JAVA的包名。这源于OpenLayers 5采用了Google的Closure库。OpenLayers 5采用驼峰式(Camel-Case)命名，变量名采用小驼峰命名，类名使用大驼峰命名。 编辑器 webstorm：https://www.jetbrains.com/webstorm/ vscode：https://code.visualstudio.com/ 资源 官网：https://openlayers.org/ 官网资源下载：https://openlayers.org/download GitHub：https://github.com/openlayers/openlayers 在线文档：https://openlayers.org/en/latest/apidoc 在线实例：https://openlayers.org/en/latest/examples Openlayers_v4.6.5离线文档：https://www.itsolotime.com/download/openlayers_v4.6.5.rar Openlayers_v5.3.0离线文档：https://www.itsolotime.com/download/openlayers_v5.3.0.zip 帮助vscode插件 前端必备：https://segmentfault.com/a/1190000006697219#articleHeader16 30个极大提高开发效率插件：https://blog.fundebug.com/2018/07/24/vs-extensions/ webstorm activetion code（激活至2099）：14RULSIH54N-eyJsaWNlbnNlSWQiOiI0UlVMU0lINTROIiwibGljZW5zZWVOYW1lIjoiMjA5OSAxODExIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNyJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE5LTExLTI3In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjcifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNyJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTExLTI3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTExLTI3In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTExLTI3In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjcifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNyJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTExLTI3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjcifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjcifV0sImhhc2giOiIxMTA3MzgwNy8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-rlH9JbPzbld/Oak51Co3HlhD6xgE7CsvbrLl6RCySuv2sw37KBfDPY1PT2lAEkW0MJkUtGtmSHVp/jk8F4RuHGvouJFMdCtnsKdnebdjaPsKpjgxoreWlOu8VCnrGh+3mmuswzGKouw52ffxbmsvGFa5ybvWv7mj9gqSY0V20OcgCmIT3dlj4f9xc0iA9o7z1pvedVzcOrxVKvLmmqRp+4zMfNuMQB5sraznW9BxslR1sWN0pUOu9/J+k7IH6Wld/oGv5dtHYFqk5RinSBMTjYlZ+X4AV5f83Z4SkzbHqy2fGC6S3NoifaVFxRSP5TQDe6hsg7Fzic6k1iWAup89pg==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==]]></content>
      <categories>
        <category>Openlayers</category>
      </categories>
      <tags>
        <tag>openlayers</tag>
        <tag>ol4/ol5</tag>
        <tag>webGis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学会使用ol5 API]]></title>
    <url>%2Fpost%2Fol%2Fch02%2Findex%2F</url>
    <content type="text"><![CDATA[API是Application Programming Interface（应用 编程 接口）的缩写，API简单的说就是“别人事先编好的程序，提供各种功能，方便你直接拿来调用”。 使用API是学习Openlayers重要的手段之一，也是学习Openlayers必备技能之一。在很多时候，查阅API有助于我们开发效率的提升，也是最快获取和学习软件最新功能的重要途经。 在线API 文档：https://openlayers.org/en/latest/apidoc 离线API Openlayers_v4.6.5离线文档：https://www.itsolotime.com/download/openlayers_v4.6.5.rar Openlayers_v5.3.0离线文档：https://www.itsolotime.com/download/openlayers_v5.3.0.zip 使用方法我们可以根据自身情况选择任意一种查看API的途径(在线或者离线)，在本教程中，提供了离线模式主要应对在于内网、无网开发下浏览API文档，可直接在浏览器中打开index.html访问即可。 API首页界面： OpenLayers API文档支持模糊检索 示例说明我们以ol.Map类的API文档为例进行说明。在搜索栏输入ol.Map，很快下方列表中的内容就变了，排在中第一项的就是ol.Map类，点击它，右边页面内容就变成了它的说明文档。文档内容从上向下，共分为三部分： 类介绍，主要介绍该类用途，建议仔细阅读，这样才能根据具体业务找对需要的类。 构造参数、事件及继承关系，该内容的重要性无需多言，看不明白，就无法创建该类的对象。 类的所有方法，建议浏览一下，了解每个方法所实现的功能，在需要时，再详细查看对应的参数和使用方式。 结合上面的内容快速浏览一下ol.Map的说明文档，感受一下，总的来说，OpenLayers的API文档是比较全面的，内容也挺详实(ol5的API文档是从代码的注释中通过工具提取生产的，所以时刻能保持更新，且完全符合JSDoc规范，文档和代码完全匹配)。 文档中类的介绍部分是否能看懂，因人而异，当了解的越多，就越容易看明白。因为它只是类的一些简要说明，谈不上详细，也没有对应的应用说明。有些类的用途需要结合到其他的知识才能更明白。在不是很明白的情况下，建议多结合类提供的方法的用途来一起理解。 类的构造参数采用的是JSDoc规范定义的，使用工具提取而出，生成了下面的参数文档，在此对其格式进行简要说明，参见下面图解： 页面右边的文件和行号标注都是可点击的，点击打开跳转到对应的源码，对于探究背后实现，或者分析Bug非常有用。然后是参数说明，很多对象的构造参数都是对象，以{key1:value1, key2:value2}这样的方式设置。这种方式有两方面的好处： 可以只设置需要的参数，或者增加自定义参数 易于为指定参数设置正确的值，避免值对应到错误的参数上。 需要注意的是参数类型Type的说明，使用符号|表示该参数可以赋予多种类型的值，对开发者是非常友好的，灵活强大。参数类型如果是容器，都会使用&lt;&gt;来表示。如果是OpenLayers 5自定义的类型，都是可以点击查看的。若为JavaScript的原生类型或DOM类型，则只给出类型名。对于各个参数的描述信息，就是一段文字，都比较详细。 除了参数之外，在OpenLayers 5中还大量使用了事件，用于解决实时通知的问题，这是典型的观察者模式。当对象改变时，能触发相应的操作。在API文档中，明确标注了各个类的事件，以及触发该事件的条件和时机。它们都列在Fires:这一栏，比如ol.Map就有很多事件，click、dbclick、singleclick、moveend等等。这些事件对于开发者来说非常重要，除了OpenLayers 5需要大量使用这些事件，很多应用开发也需要使用它们来实现一些关键功能。关于事件更详细的说明参见事件。 在事件说明之后，还有类继承的说明。Subclasses列出了当前类的所有子类；Extends列出了当前类的父类。不要小瞧这个说明，因为在面向对象编程范式中，所有能用父类的地方，都可以用子类。比如ol.Map的构造参数options可以设置layers属性，它的值是ol.layer.Base类型元素的集合，那么就可以用ol.layer.Base的子类ol.layer.Group或ol.layer.Layer，以此类推，也可以用这两个类的子类ol.layer.Image、ol.layer.Tile、ol.layer.Vector等。这样我们就知道具体哪些参数能用哪些类了。 最后就是这个类所有方法的说明了。方法的说明包含方法名，参数，以及方法功能描述。同类的说明差不多，为此不再累述。 最后，提醒一下，在遇到任何问题时，请优先查询API文档来排忧解惑。]]></content>
      <categories>
        <category>Openlayers</category>
      </categories>
      <tags>
        <tag>openlayers</tag>
        <tag>ol4/ol5</tag>
        <tag>webGis</tag>
      </tags>
  </entry>
</search>
